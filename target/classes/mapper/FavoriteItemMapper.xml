<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.ApiRound.mapper.FavoriteItemMapper">

    <!-- resultMap: 컬럼 전부 소문자 -->
    <resultMap id="FavoriteItemResultMap" type="com.example.ApiRound.dto.ListDto">
        <id     property="id"       column="id"/>
        <result property="name"     column="name"/>
        <result property="region"   column="region"/>
        <result property="subregion" column="subregion"/>
        <result property="address"  column="address"/>
        <result property="phone"    column="phone"/>
        <result property="homepage" column="homepage"/>
        <result property="coordX"   column="coord_x"/>
        <result property="coordY"   column="coord_y"/>
        <result property="category" column="category"/>
        <result property="imageUrl" column="image_url"/>
    </resultMap>

    <!-- 찜 추가 (id는 AUTO_INCREMENT 가정이므로 제외) -->
    <insert id="insertFavorite" parameterType="com.example.ApiRound.dto.FavoriteItemDto">
        insert into favorite_item (user_id, item_id, created_at)
        values (#{userId}, #{itemId}, now())
    </insert>

    <!-- 찜 삭제 -->
    <delete id="deleteFavorite" parameterType="map">
        delete from favorite_item
        where user_id = #{userId}
        and item_id = #{itemId}
    </delete>

    <!-- 찜 여부 확인 (1/0 반환 → boolean 매핑 가능) -->
    <select id="isFavorite" parameterType="map" resultType="boolean">
        select case when count(*) > 0 then 1 else 0 end
        from favorite_item
        where user_id = #{userId}
        and item_id = #{itemId}
    </select>

    <!-- 유저별 찜 목록 -->
    <select id="getFavoritesByUserId" parameterType="long" resultMap="FavoriteItemResultMap">
        select
        i.id,
        i.name,
        i.region,
        i.subregion,
        i.address,
        i.phone,
        i.homepage,
        i.coord_x,
        i.coord_y,
        i.category
        from favorite_item f
        join item_list i on f.item_id = i.id
        where f.user_id = #{value}
        order by f.created_at desc
    </select>

</mapper>
